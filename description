fork() 
        creates a new process by duplicating the calling process.  The
        new process is referred to as the child process.  The calling process
        is referred to as the parent process.
        The child process and the parent process run in separate memory
        spaces.  **At the time of fork() both memory spaces have the same
        content.**
        
        Процесс после системного вызова fork, раздваивается, у исходного процесса 
        создаётся идентичный потомок-двойник в идентичном состоянии (ну почти). 
        Создавшийся процесс будет занят выполнением того же кода ровно с той же точки, 
        что и исходный процесс.ьРазличить кто создал, а кто создался, можно по возвращаемому значению fork, 
        поэтому его результат обычно передаётся в if, чтобы эти процессы выполнили какие-то разные вещи, 
        один пошёл в ветку if, другой в ветку else.

        fork() создает новый процесс и возвращает его PID(process ID)

int	 execve(const char * __file, char * const * __argv, char * const * __envp)

